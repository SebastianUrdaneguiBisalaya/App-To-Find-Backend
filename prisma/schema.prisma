generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id       String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_name     String
  user_lastname String
  user_email    String     @unique
  user_password String
  age           Int?
  user_avatar   String?
  verified      Boolean    @default(false)
  orders        Order[]    @relation("UserOrders")
  purchases     Purchase[]
}

model Event {
  event_id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  event_name        String
  event_category    String
  event_date        DateTime
  event_hour        DateTime
  event_place       String
  event_latitude    Float
  event_longitude   Float
  event_capacity    Int
  event_img         String
  event_description String
  event_artist      String
  pre_sale_date     DateTime
  pre_sale_end_date DateTime
  pre_sale_discount Float
  event             Order?
  tickets           Ticket[]
}

model Order {
  order_id    String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_date  DateTime
  user_id     String     @db.Uuid
  order_state String
  event_id    String     @unique @db.Uuid
  event       Event      @relation(fields: [event_id], references: [event_id])
  user        User       @relation("UserOrders", fields: [user_id], references: [user_id], onDelete: Cascade)
  purchases   Purchase[] @relation("OrderPurchases")
}

model Purchase {
  purchase_id       String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id           String @db.Uuid
  order_id          String @db.Uuid
  purchase_quantity Int
  purchase_amount   Float
  ticket_id         String @unique @db.Uuid
  bar_code          String
  order             Order  @relation("OrderPurchases", fields: [order_id], references: [order_id])
  ticket            Ticket @relation(fields: [ticket_id], references: [ticket_id])
  user              User   @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
}

model Ticket {
  ticket_id       String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  event_id        String    @db.Uuid
  ticket_type     String
  ticket_price    Float
  ticket_quantity Int
  purchase        Purchase?
  event           Event     @relation(fields: [event_id], references: [event_id])
}
